% clear all;
addpath('./l1_ls_matlab');

file1='./Images/slice_50.png';
file2='./Images/slice_51.png';
img1_temp=imread(file1);
% img1=double(img1);
img2_temp=imread(file2); 
% img2=double(img2);
img1 = zeros(size(img1_temp,2),size(img1_temp,2));
img1((size(img1_temp,2) -size(img1_temp,1))/2:(size(img1_temp,2) +size(img1_temp,1))/2-1,:) = img1_temp;

% figure();
% imshow(img1);
% 
% figure();
% imshow(img2);

totalAngles=18;
theta= zeros(1,18);
for i=0:totalAngles-1
    theta(i+1) = 10*i;
end

% Part a
[R,xp] = radon(img1,theta);

I_ramlak = iradon(R,theta,'nearest','Ram-Lak');

figure();
imshow(uint8(I_ramlak));


% Part b
% We need to construct the A matrix now. This matrix will have the number
% of rows as number of rows in R and the number of columns as the number of
% pixels in the original image

m_A = size(R, 1);
n_A = numel(img1);

A=A_class(m_A,n_A,theta);
At=At_class(n_A,m_A,theta);

y=reshape(R,m_A*numel(theta),1);
lambda = 10;
[result,~]=l1_ls(A,At,size(y,1),n_A,y,lambda);

f=idct2(reshape(result,size(img1,1),size(img1,2)));
save('result_b.mat','f');
figure();
imshow(uint8(f));

Mean_Squared_Error_5 = mean((f - img1).^2,'all') / mean(img1.^2, 'all')



%Part c
% Here we will be using the interdependency of the




















   











%% Helper Functions and classes








